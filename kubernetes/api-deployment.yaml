apiVersion: apps/v1
kind: Deployment
metadata:
  name: nba-stats-api
  namespace: ${NAMESPACE}
  labels:
    app: nba-stats-api
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nba-stats-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: nba-stats-api
        component: backend
    spec:
      containers:
      - name: api
        image: ${IMAGE_REGISTRY}/nba-stats-api:${API_VERSION}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        env:
        - name: NODE_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: db_host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: db_port
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: db_name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-token-secret
              key: token
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: api-config
              key: redis_host
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: api-credentials
              key: api_key
        volumeMounts:
        - name: api-config-volume
          mountPath: /app/config
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: api-config-volume
        configMap:
          name: api-config
      - name: logs
        emptyDir: {}
      imagePullSecrets:
      - name: registry-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: nba-stats-api
  namespace: ${NAMESPACE}
  labels:
    app: nba-stats-api
    component: backend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: nba-stats-api
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nba-stats-api
  namespace: ${NAMESPACE}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nba-stats-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80 