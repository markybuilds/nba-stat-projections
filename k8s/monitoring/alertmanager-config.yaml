apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
data:
  alertmanager.yml: |
    global:
      resolve_timeout: 5m
      smtp_smarthost: '${SMTP_SERVER}:${SMTP_PORT}'
      smtp_from: '${SMTP_FROM_EMAIL}'
      smtp_auth_username: '${SMTP_USERNAME}'
      smtp_auth_password: '${SMTP_PASSWORD}'
      slack_api_url: '${SLACK_WEBHOOK_URL}'

    templates:
      - '/etc/alertmanager/templates/*.tmpl'

    route:
      group_by: ['alertname', 'severity']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      receiver: 'team-nba-stats'
      routes:
      - match:
          severity: critical
        receiver: 'team-nba-stats-critical'
        group_wait: 10s
        repeat_interval: 1h

    receivers:
    - name: 'team-nba-stats'
      email_configs:
      - to: '${ALERT_EMAIL}'
        send_resolved: true
      slack_configs:
      - channel: '#nba-stats-alerts'
        send_resolved: true
        title: '{{ template "slack.default.title" . }}'
        text: '{{ template "slack.default.text" . }}'

    - name: 'team-nba-stats-critical'
      email_configs:
      - to: '${ALERT_EMAIL}'
        send_resolved: true
      slack_configs:
      - channel: '#nba-stats-alerts'
        send_resolved: true
        title: '[CRITICAL] {{ template "slack.default.title" . }}'
        text: '{{ template "slack.default.text" . }}'

    templates:
    - name: 'slack.default.title'
      template: |
        [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }}
    - name: 'slack.default.text'
      template: |
        {{ range .Alerts }}
        *Alert:* {{ .Labels.alertname }}
        *Description:* {{ .Annotations.description }}
        *Severity:* {{ .Labels.severity }}
        *Started:* {{ .StartsAt | since }}
        {{ if .Labels.instance }}*Instance:* {{ .Labels.instance }}{{ end }}
        {{ end }} 